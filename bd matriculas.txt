
clases											tablas

Alumno.java			extends persona				alumnos -> personas(dni)  -> matriculas()
Alumnos.java	
Asignatura.java									asignaturas -> profesor(dni)
Asignaturas.java	extends Asignatura				
Matricula.java		extends Asignatura			matriculas -> asignaturas()
Matriculas.java		extends Matricula				
Persona.java									personas
Profesor.java 		extends persona				profesores -> personas(dni)


create database pruebas_matriculasBD;
use pruebas_matriculasBD;

CREATE TABLE IF NOT EXISTS personas (
dni VARCHAR(9) NOT NULL,
nombre VARCHAR(20),
apellido VARCHAR(25),
PRIMARY KEY(dni)
);

CREATE TABLE IF NOT EXISTS profesores (
dni VARCHAR(9) NOT NULL,
titulacion VARCHAR(20),
departamento VARCHAR(20),
PRIMARY KEY(dni),
FOREIGN KEY (dni) REFERENCES personas(dni)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS alumnos (
dni VARCHAR(9) NOT NULL,
anyo_inscripcion INTEGER(4),
ciclo VARCHAR(50),
PRIMARY KEY(dni),
FOREIGN KEY (dni) REFERENCES personas(dni)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS asignaturas (
nombre VARCHAR(20),
creditos INTEGER(4),
dni VARCHAR(9) NOT NULL,
PRIMARY KEY(nombre)
FOREIGN KEY (dni) REFERENCES profesores(dni)
ON DELETE CASCADE ON UPDATE CASCADEe
);

CREATE TABLE IF NOT EXISTS matriculas (
nombre VARCHAR(20),
dni VARCHAR(9) NOT NULL,
anyoMatriculacion INTEGER(4),
precio DOUBLE(8,3),
PRIMARY KEY(nombre, dni),
FOREIGN KEY (nombre) REFERENCES asignaturas(nombre)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (dni) REFERENCES alumnos(dni)
ON DELETE CASCADE ON UPDATE CASCADE
);

https://github.com/LordDers/java_gestionMatriculas/tree/master/src/com/zubiri/matriculas

// persona.java
	String dni;
	String nombre;
	String apellido;
//
// profesor.java
	String titulacion;
	String departamento;
	int numProfesores;
//
//alumno.java
	//Año en el que se inscribió por primera vez en alguna asignatura
	int anyoInscripcion = -1;
	//Ciclo que cursa el alumno
	String ciclo = null;	
	//Matrículas realizadas a lo largo de los años en las distintas asignaturas
	ArrayList<Matricula> matriculas = null;
//
//asignaturas java
	String nombre;
	int creditos;
	Profesor profesor;
//
//matriculas java
	int anyoMatriculacion;
    double precio;
//

-----------------------------------------------------------------------------------------

create database matriculasBD;
use matriculasBD;

CREATE TABLE IF NOT EXISTS alumnos (
dni VARCHAR(9) NOT NULL,
nombre VARCHAR(20),
apellido VARCHAR(25),
anyo_inscripcion INTEGER(4),
ciclo VARCHAR(50),
PRIMARY KEY(dni)
);

//alumnos de pruebas
//INSERT INTO alumnos VALUES ('dni', 'nombre', 'apeliido', 'anyo_inscripcion', 'ciclo');

INSERT INTO alumnos VALUES ('12345678b', 'Gorkas', 'Rubs', '2000', 'Desarrollo de aplicaciones');

CREATE TABLE IF NOT EXISTS profersores (
dni VARCHAR(9) NOT NULL,
nombre VARCHAR(20),
apellido VARCHAR(25),
titulacion VARCHAR(20),
departamento VARCHAR(20),
num_profesores INTEGER(3),
PRIMARY KEY(dni)
);

INSERT INTO `profersores` VALUES ('12345678a', 'nombre', 'apeliido', 'titulacion', 'departamento', 4);

CREATE TABLE IF NOT EXISTS asignaturas (
id_asignatura INTEGER NOT NULL AUTO_INCREMENT,
nombre VARCHAR(20),
creditos INTEGER(3),
dni VARCHAR(9),
PRIMARY KEY (id_asignatura)
);

CREATE TABLE IF NOT EXISTS matriculas (
anyo_matriculacion INTEGER(4),
precio DOUBLE(4,2),
nombre VARCHAR(20),
creditos INTEGER(3),
dni VARCHAR(9),
nombre VARCHAR(20),
apellido VARCHAR(25),
titulacion VARCHAR(20),
departamento VARCHAR(20),
num_profesores INTEGER(3),
);


INSERT INTO asignaturas VALUES (NULL, 'asd', 4, '1245678q');

INSERT INTO profersores VALUES ('12345678a', 'nombre', 'apeliido', 'titulacion', 'departamento', 4);

SELECT * FROM profersores INNER JOIN `asignaturas` ON profersores.dni = asignaturas.dni WHERE profersores.dni = '12345678a';

SELECT profersores.dni, profersores.nombre, asignaturas.nombre FROM profersores INNER JOIN asignaturas ON profersores.dni = asignaturas.dni WHERE profersores.dni = '12345678a';
